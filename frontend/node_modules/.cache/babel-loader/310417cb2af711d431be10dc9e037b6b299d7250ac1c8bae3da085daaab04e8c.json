{"ast":null,"code":"var _jsxFileName = \"D:\\\\cattle-disease-detection\\\\frontend\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Form, Button, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n\n    // Validate file type\n    if (file && !file.type.startsWith(\"image/\")) {\n      setError(\"Please upload a valid image file.\");\n      setSelectedFile(null);\n      return;\n    }\n\n    // Validate file size (limit to 5MB)\n    if (file && file.size > 5 * 1024 * 1024) {\n      setError(\"File size should not exceed 5MB.\");\n      setSelectedFile(null);\n      return;\n    }\n    setSelectedFile(file);\n    setResult(null); // Reset result\n    setError(null); // Reset error\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError(\"No file selected. Please upload an image.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", selectedFile);\n    setIsLoading(true); // Show loading indicator\n    setError(null);\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setResult(response.data); // Set the prediction result\n    } catch (err) {\n      console.error(\"Error uploading file:\", err);\n      setError(\"Failed to upload image or get prediction.\");\n    } finally {\n      setIsLoading(false); // Hide loading indicator\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"text-center\",\n              children: \"Predict Disease\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFile\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Upload an image of your cattle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"file\",\n                  onChange: handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handlePredict,\n                disabled: isLoading,\n                children: isLoading ? \"Predicting...\" : \"Predict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), predictionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Prediction Result:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: predictionResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadPage, \"88hLL+O7x4Js+OjA0ghYl7P0SZ0=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","axios","Container","Row","Col","Form","Button","Card","jsxDEV","_jsxDEV","UploadPage","_s","selectedFile","setSelectedFile","result","setResult","error","setError","isLoading","setIsLoading","handleFileChange","event","file","target","files","type","startsWith","size","handleUpload","formData","FormData","append","response","post","headers","data","err","console","className","children","md","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","onChange","variant","onClick","handlePredict","disabled","predictionResult","_c","$RefreshReg$"],"sources":["D:/cattle-disease-detection/frontend/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col, Form, Button, Card } from \"react-bootstrap\";\r\n\r\nconst UploadPage = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [result, setResult] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n\r\n\r\n    \r\n\r\n\r\n        // Validate file type\r\n        if (file && !file.type.startsWith(\"image/\")) {\r\n            setError(\"Please upload a valid image file.\");\r\n            setSelectedFile(null);\r\n            return;\r\n        }\r\n\r\n        // Validate file size (limit to 5MB)\r\n        if (file && file.size > 5 * 1024 * 1024) {\r\n            setError(\"File size should not exceed 5MB.\");\r\n            setSelectedFile(null);\r\n            return;\r\n        }\r\n\r\n        setSelectedFile(file);\r\n        setResult(null); // Reset result\r\n        setError(null);  // Reset error\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            setError(\"No file selected. Please upload an image.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", selectedFile);\r\n\r\n        setIsLoading(true); // Show loading indicator\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/upload\", formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            });\r\n\r\n            setResult(response.data); // Set the prediction result\r\n        } catch (err) {\r\n            console.error(\"Error uploading file:\", err);\r\n            setError(\"Failed to upload image or get prediction.\");\r\n        } finally {\r\n            setIsLoading(false); // Hide loading indicator\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={8}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title className=\"text-center\">Predict Disease</Card.Title>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                    <Form.Label>Upload an image of your cattle</Form.Label>\r\n                                    <Form.Control type=\"file\" onChange={handleFileChange} />\r\n                                </Form.Group>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={handlePredict}\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {isLoading ? \"Predicting...\" : \"Predict\"}\r\n                                </Button>\r\n                            </Form>\r\n                            {predictionResult && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Prediction Result:</h5>\r\n                                    <p>{predictionResult}</p>\r\n                                </div>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default UploadPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMoB,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;IAMlC;IACA,IAAIF,IAAI,IAAI,CAACA,IAAI,CAACG,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;MACzCT,QAAQ,CAAC,mCAAmC,CAAC;MAC7CJ,eAAe,CAAC,IAAI,CAAC;MACrB;IACJ;;IAEA;IACA,IAAIS,IAAI,IAAIA,IAAI,CAACK,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE;MACrCV,QAAQ,CAAC,kCAAkC,CAAC;MAC5CJ,eAAe,CAAC,IAAI,CAAC;MACrB;IACJ;IAEAA,eAAe,CAACS,IAAI,CAAC;IACrBP,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACjBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACrB,CAAC;EAED,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAChB,YAAY,EAAE;MACfK,QAAQ,CAAC,2CAA2C,CAAC;MACrD;IACJ;IAEA,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEnB,YAAY,CAAC;IAEtCO,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAMe,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QACxEK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFnB,SAAS,CAACiB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACrB,KAAK,CAAC,uBAAuB,EAAEoB,GAAG,CAAC;MAC3CnB,QAAQ,CAAC,2CAA2C,CAAC;IACzD,CAAC,SAAS;MACNE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC;EAED,oBACIV,OAAA,CAACP,SAAS;IAACoC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACvB9B,OAAA,CAACN,GAAG;MAACmC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACnC9B,OAAA,CAACL,GAAG;QAACoC,EAAE,EAAE,CAAE;QAAAD,QAAA,eACP9B,OAAA,CAACF,IAAI;UAAAgC,QAAA,eACD9B,OAAA,CAACF,IAAI,CAACkC,IAAI;YAAAF,QAAA,gBACN9B,OAAA,CAACF,IAAI,CAACmC,KAAK;cAACJ,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAAe;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChErC,OAAA,CAACJ,IAAI;cAAAkC,QAAA,gBACD9B,OAAA,CAACJ,IAAI,CAAC0C,KAAK;gBAACC,SAAS,EAAC,UAAU;gBAACV,SAAS,EAAC,MAAM;gBAAAC,QAAA,gBAC7C9B,OAAA,CAACJ,IAAI,CAAC4C,KAAK;kBAAAV,QAAA,EAAC;gBAA8B;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACvDrC,OAAA,CAACJ,IAAI,CAAC6C,OAAO;kBAACzB,IAAI,EAAC,MAAM;kBAAC0B,QAAQ,EAAE/B;gBAAiB;kBAAAuB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChD,CAAC,eACbrC,OAAA,CAACH,MAAM;gBACH8C,OAAO,EAAC,SAAS;gBACjBC,OAAO,EAAEC,aAAc;gBACvBC,QAAQ,EAAErC,SAAU;gBAAAqB,QAAA,EAEnBrB,SAAS,GAAG,eAAe,GAAG;cAAS;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,EACNU,gBAAgB,iBACb/C,OAAA;cAAK6B,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACjB9B,OAAA;gBAAA8B,QAAA,EAAI;cAAkB;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3BrC,OAAA;gBAAA8B,QAAA,EAAIiB;cAAgB;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC;AAACnC,EAAA,CA5FID,UAAU;AAAA+C,EAAA,GAAV/C,UAAU;AA+FhB,eAAeA,UAAU;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}