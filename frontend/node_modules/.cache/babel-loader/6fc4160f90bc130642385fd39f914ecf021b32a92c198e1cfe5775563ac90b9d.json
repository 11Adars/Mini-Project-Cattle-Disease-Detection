{"ast":null,"code":"var _jsxFileName = \"D:\\\\cattle-disease-detection\\\\frontend\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Form, Button, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Upload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [predictionResult, setPredictionResult] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handlePredict = async () => {\n    if (!selectedFile) {\n      alert(\"Please upload an image first!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData);\n      setPredictionResult(response.data.prediction);\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Failed to predict. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"text-center\",\n              children: \"Predict Disease\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formFile\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Upload an image of your cattle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"file\",\n                  onChange: handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handlePredict,\n                disabled: isLoading,\n                children: isLoading ? \"Predicting...\" : \"Predict\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), predictionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Prediction Result:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: predictionResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Upload, \"kuzWWNa2QYyna7bP9AO0qC5pEbI=\");\n_c = Upload;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","Container","Row","Col","Form","Button","Card","jsxDEV","_jsxDEV","Upload","_s","selectedFile","setSelectedFile","predictionResult","setPredictionResult","isLoading","setIsLoading","handleFileChange","event","target","files","handlePredict","alert","formData","FormData","append","response","post","data","prediction","error","console","className","children","md","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","onChange","variant","onClick","disabled","_c","UploadPage","$RefreshReg$"],"sources":["D:/cattle-disease-detection/frontend/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col, Form, Button, Card } from \"react-bootstrap\";\r\n\r\nconst Upload = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [predictionResult, setPredictionResult] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const handlePredict = async () => {\r\n        if (!selectedFile) {\r\n            alert(\"Please upload an image first!\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", selectedFile);\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await axios.post(\"http://localhost:5000/upload\", formData);\r\n            setPredictionResult(response.data.prediction);\r\n        } catch (error) {\r\n            console.error(\"Error uploading image:\", error);\r\n            alert(\"Failed to predict. Please try again.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={8}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title className=\"text-center\">Predict Disease</Card.Title>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                                    <Form.Label>Upload an image of your cattle</Form.Label>\r\n                                    <Form.Control type=\"file\" onChange={handleFileChange} />\r\n                                </Form.Group>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={handlePredict}\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {isLoading ? \"Predicting...\" : \"Predict\"}\r\n                                </Button>\r\n                            </Form>\r\n                            {predictionResult && (\r\n                                <div className=\"mt-4\">\r\n                                    <h5>Prediction Result:</h5>\r\n                                    <p>{predictionResult}</p>\r\n                                </div>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}